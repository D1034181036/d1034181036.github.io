[{"content":"前言 我有一個大學班級的Line群組， 每當有同學生日時，我們老師就會傳訊息祝他生日快樂， 而且持續到現在整整七年都還保持著這個習慣，真的是太有毅力了！ 我們有時候還會開玩笑懷疑老師有寫機器人來自動發生日快樂訊息XD\n\r\n現在很多人的Facebook會把生日顯示關掉，因此更有可能錯過這些日子。 所以我們來做個免費、不需架設伺服器的生日提醒系統吧！\nLine 生日提醒工具 使用工具  Google Apps Script Google Sheets Line Notify  運作方式  排程設定每天固定時間執行一次 Script 讀取 Google Sheets 取得生日資料 若當天有事件發生，呼叫 Line Notify 傳送提醒  設定步驟  Line Notify 設定通知群組、取得專用Token Google Sheets 建立Sheets檔案，設定格式請參考這裡 Google Apps Script 建立程式檔案，請參考下方程式碼範例，將sheetId與token填入 設定排程定時執行程式 完成！  程式碼 function main(){ //sheetId可以從網址複製 -\u0026gt;https://docs.google.com/spreadsheets/d/{sheet_id}/ const sheetId = '{sheet_id}'; const token = '{line_notify_token}'; const spreadSheet = SpreadsheetApp.openById(sheetId); const sheet = spreadSheet.getSheets()[0]; const data = sheet.getRange(2,1,sheet.getLastRow()-1,3).getValues(); const now = new Date(); let message = ''; data.forEach(item =\u0026gt; { if(item[0]===now.getMonth()+1 \u0026amp;\u0026amp; item[1]===now.getDate()){ message += '\\n' + item[2]; } }); if(message !== ''){ message = now.getMonth()+1 + '/' + now.getDate() + message; doPost(token, message); } } function doPost(token, message) { UrlFetchApp.fetch('https://notify-api.line.me/api/notify', { 'headers': { 'Authorization': 'Bearer ' + token, }, 'method': 'post', 'payload': { 'message': message } }); } 成果發表 設定生日列表 - Google Sheets \r\n自動提醒 - Line Notify \r\n","date":"2021-10-25T00:00:00Z","image":"https://d1034181036.github.io/p/line-birthdy-notify/article-img_huc08f46ffef0e23a55c8276aac8d604cd_231014_120x120_fill_q75_box_smart1.jpg","permalink":"https://d1034181036.github.io/p/line-birthdy-notify/","title":"Line生日提醒工具"},{"content":" 官方網站：https://nginxproxymanager.com/\n 為什麼要使用Nginx Proxy Manager？  多人管理系統、圖形化介面 漂亮的介面、一目了然所有的Proxy設定 內建Let\u0026rsquo;s Encrypt，免費又快速的幫你加上HTTPS  安裝方法：使用Docker-Compose Step1: 安裝 Docker Step2: 安裝 Docker-Compose [Optional] Step3: 建立 docker-compose.yml version: '3'\rservices:\rapp:\rimage: 'jc21/nginx-proxy-manager:latest'\rrestart: unless-stopped\rports:\r- '80:80'\r- '81:81'\r- '443:443'\rvolumes:\r- ./data:/data\r- ./letsencrypt:/etc/letsencrypt\rStep4: 啟動服務 docker-compose up -d Step5: 開始使用 - http://127.0.0.1:81 若是使用SSH安裝，可以依照不同情況遠端連到127.0.0.1:81。 以下幾種連接方式提供做為參考：\n SSH Tunnel 公開實體IP / NAT轉址 區網虛擬IP  預設管理員帳密\nEmail: admin@example.com\rPassword: changeme\r 新增Proxy示範 \r\nProxy列表 \r\n","date":"2022-05-06T00:00:00Z","image":"https://d1034181036.github.io/p/nginx-proxy-manager/article-img_hud8f3d034a67647fb7aad77ff818f3db0_68081_120x120_fill_box_smart1_3.png","permalink":"https://d1034181036.github.io/p/nginx-proxy-manager/","title":"反向代理工具：Nginx Proxy Manager"},{"content":"使用工具：\n Google Apps Script OpenWeatherMap  GitHub Repository https://github.com/D1034181036/Google-Apps-Script\nScreen Shot ","date":"2021-10-29T00:00:00Z","image":"https://d1034181036.github.io/p/line-weather-notify/article-img_hu38761a7225c3427baa870037bf697302_408962_120x120_fill_q75_box_smart1.jpg","permalink":"https://d1034181036.github.io/p/line-weather-notify/","title":"Line天氣提醒工具 (純記錄)"},{"content":"使用youtube-dl與PHP製作一個極簡單的YT影片下載網站。\nGitHub Repository https://github.com/D1034181036/YouTube-Video-Downloader\nOnline Demo YouTube Video Downloader Screen Shot \rscreen_shot\r\n","date":"2021-10-05T00:00:00Z","image":"https://d1034181036.github.io/p/youtube-video-downloader/article-img_hu6a59494dae70f32ae71ed6ccb6fe3c55_102956_120x120_fill_q75_box_smart1.jpg","permalink":"https://d1034181036.github.io/p/youtube-video-downloader/","title":"製作一個YouTube影片下載網站"},{"content":"YouTube影片連結 \rthumbnail\r\n想法來源：Tom Scott 非常有意思的影片，強烈推薦。 This Video Has X Views 自己動手做 我在這邊選擇使用 Google Apps Script 來實作，原因有以下三點：\n 授權 YouTube API 的方式非常簡單。 方便連結 Google Sheet 紀錄執行結果。 可以排程定時執行，無須自己花錢架設伺服器。  版本1 - 基本功能版 功能非常的簡單，只需要三行程式碼：  呼叫api取得影片資訊 更改影片資訊的標題欄(改為現在的觀看次數) 呼叫api執行更新  function basic(){ // 影片ID設定 const videoId = \u0026quot;aST49yvU3x0\u0026quot;; // 標題格式設定 const titleFormat = \u0026quot;有 {views} 個人點進來看我把筆放到貓的左手上\u0026quot;; // 取得影片資訊 const videoDetails = YouTube.Videos.list(\u0026quot;snippet, statistics\u0026quot;, { id: videoId })['items'][0]; // 更新標題資訊 videoDetails['snippet']['title'] = titleFormat.replace(\u0026quot;{views}\u0026quot;, videoDetails['statistics']['viewCount'].toLocaleString('en-US')); // 執行更新 YouTube.Videos.update(videoDetails, \u0026quot;id,snippet,statistics\u0026quot;); } 版本2 - 進階功能版 多增加三點功能  若觀看次數相同，則不更新影片，這樣可以節省api的呼叫次數。 將執行結果記錄在Google App Script Log，方便debug。 將更新內容記錄在Google Sheets上，方便隨時查看更新記錄。  主程式 function main(){ const videoId = \u0026quot;aST49yvU3x0\u0026quot;; const titleFormat = \u0026quot;有 {views} 個人點進來看我把筆放到貓的左手上\u0026quot;; const sheetId = \u0026quot;{sheet_id}\u0026quot;; const response = YouTube.Videos.list(\u0026quot;snippet, statistics\u0026quot;, { id: videoId }); const videoDetails = response['items'][0]; const currentTitle = videoDetails['snippet']['title']; const currentViews = videoDetails['statistics']['viewCount']; const newTitle = titleFormat.replace(\u0026quot;{views}\u0026quot;, currentViews.toLocaleString('en-US')); if(currentTitle !== newTitle){ videoDetails['snippet']['title'] = newTitle; YouTube.Videos.update(videoDetails, \u0026quot;id,snippet,statistics\u0026quot;); Logger.log(`Update completed: ${newTitle}`); sheetLog(sheetId, currentViews); }else{ Logger.log(\u0026quot;No need to update\u0026quot;); } } 記錄Google Sheets function sheetLog(sheetId, views){ const spreadSheet = SpreadsheetApp.openById(sheetId); const sheet = spreadSheet.getSheets()[0]; const lastRow = sheet.getLastRow(); const currentDate = new Date(); sheet.getRange(lastRow+1, 1).setValue(currentDate.toLocaleString('zh-tw', { timeZone: 'Asia/Taipei' })); sheet.getRange(lastRow+1, 2).setValue(views); sheet.getRange(lastRow+1, 3).setValue(currentDate.getTime()); } 如何使用  上傳一支影片到YouTube，並且取得影片ID。 建立一個Google App Script，設定videoId, titleFormat。 設定排程，建議10分鐘執行一次，避免次數用完，詳細請見Quota Calculator。 (Optional)建立Google Sheet並在Google App Script內設定sheetId。  成果發表 更新記錄 \r\n","date":"2021-09-21T00:00:00Z","image":"https://d1034181036.github.io/p/this-video-has-69-views/article-img_hubc40c776dd8b137db26b81c5ed0e5c3a_119033_120x120_fill_box_smart1_3.png","permalink":"https://d1034181036.github.io/p/this-video-has-69-views/","title":"有 6,987 個人點進來看我把筆放到貓的左手上"},{"content":"註：我先預設會讀這篇的都會用Linux\u0026hellip; Step1: 租一台Linux虛擬主機 選擇自己喜歡的虛擬主機供應商，租一台虛擬主機。\n我目前是使用AWS的 Lightsail (VPS主機)，每個月只要3.5美元。\nStep2: 安裝 OpenVPN Server 本文使用 Nyr/openvpn-install 進行安裝 sudo su wget https://git.io/vpn -O openvpn-install.sh \u0026amp;\u0026amp; bash openvpn-install.sh 輸入完成後接著它會問題幾個問題：  UDP (建議) / TCP port: (建議更改) DNS server 第一個用戶名稱  範例如下圖： Step3: 下載你的使用者檔案 架設好OpenVPN Server之後，\n目錄下會多一個.ovpn檔，例如：KevinChen.ovpn\n我自己是習慣用FileZilla下載到client端。\nStep4: 安裝 OpenVPN Client 在你想用VPN的電腦上面安裝 OpenVPN Client\n然後把ovpn檔案丟進去，就完成囉～\n在IP查詢網站上面測試看看：\n\r\n結語 使用這個方法只需要5分鐘就可以搞定，感謝社群的貢獻，\n如果這個方法有幫助到你，歡迎去作者的github幫他按個星星哦～\n我真的很喜歡這些有效又簡單的解決方案。\n實測2021/08/30可行。\n沒有什麼方法是永遠有效的，至少現在還能用就好。\n","date":"2021-08-31T00:00:00Z","image":"https://d1034181036.github.io/p/build-vpn-server/article-img_huaa49fcb5cd979c3d70ecf59da3918d5a_226055_120x120_fill_q75_box_smart1.jpg","permalink":"https://d1034181036.github.io/p/build-vpn-server/","title":"快速架設VPN伺服器"},{"content":" Credit: https://youtu.be/oluY633rkgI - (Kyle - Web Dev Simplified) Title: \u0026ldquo;5 Projects You Can Build In A Week That Will Get You Hired\u0026rdquo;\n 這篇文章的內容主要來自Web Dev Simplified頻道的影片， 我覺得內容很棒很有參考價值，所以來筆記一下，影片連結在上面。\n1. Web application with third party api (前端) 找一個你感興趣的第三方API，像是烹飪、電影或是遊戲等等， 做一個簡單的網站來展示這些資訊與應用。\n優點   你工作的每一家公司，幾乎都會在某個地方用到第三方API。 這表示你有能力將第三方API結合到你自己的web application。\n  你可以更專注於前端頁面設計與良好的用戶體驗， 因為你不需要自己建構一個複雜的後端來處理這些資料， 有些API可能會需要用到簡單的後端，但更多時候API甚至都不需要你使用到後端。\n  2. Brochure site (前端) 舉例  Landing page for a restaurant Aritst page for showing their work Showcases of business (公司的服務項目或案例)  Landing page, Contact page Portfolio, Menu    你可以做一個很棒的餐廳網站， 讓別人一進到你的網站，就可以馬上知道這間餐廳在賣什麼、 知道餐廳的位置在哪裡、知道如何聯繫餐廳，並且能夠在上面查看Menu。\n優點   這個project可以做得很簡單，也可以做得很複雜， 你可以讓這個網站在視覺上讓人驚豔以及擁有良好的用戶體驗。\n  這代表你有足夠的前端能力做出一個很棒的網站， 而大部分的公司都會需要一個Landing Page之類的東西。\n  3. E-commerce site (後端) 你不需要做一個非常複雜的電商網站Like Amazon。\n想像一下你有一個插畫家的網站，你需要賣他們的畫或是T-shirt， 你需要處理付款、處理訂單功能，並告訴他們購買成功的資訊， 這些都是後端需要處理的事。\n在這種情況下，你不需要處理複雜的功能，如會員系統(user authentication)， 你只需要設計簡單的前端商店頁面，並設計一些後端處理過程， 這樣的話你大概可以在一個禮拜之內完成。\n如果你想要讓這個專案看起來更厲害， 你可以把專案時間拉長到一個月或是更久， 這樣你就可以更focus在後端的功能，例如增加以下功能：\n 庫存管理系統 購物車系統 會員系統  優點   這代表你有能力做出一個簡單的電商網站， 你知道如何處理付款、如何處理購買功能、讓使用者知道購買成功與否。 而大部分的公司都會在網路上賣一些東西。(應該吧)\n  大部分的公司都很在乎他們網站的安全性， 這也代表你有能力做出一個非常安全的電商網站。(安全性很重要)\n  4. Personal Portfolio site (前端) 當你要求職的時候，你可以做一個主要的個人網站來：\n 介紹你自己 展示你的作品集 展示你會的技能 展示你的簡歷  優點   在這個網站上你可以盡情發揮創意、做出吸引人的網站， 你可以把你自己的個性充分展現在這個網站上。 (可以做一個很酷的動畫之類的)\n  職場上第一個看你履歷的大部分都是HR或是非技術人員， 因此他們大概會覺得 哇，這個人知道怎麼做出一個很酷的網站 。 所以，請確保你花大部分的時間在前端上面。\n  5. Simple game (前端+後端) 開發一個簡單的遊戲， 最好是規則已經存在的遊戲，例如棋盤類的遊戲。 這樣的話你就不需要花太多時間在遊戲規則上。 強烈建議可以做線上多人遊戲，像是線上版的圈圈叉叉(tic-tac)。\n優點   這代表你具有前端與後端的能力，同時也知道如何將其整合在一起， 還知道如何使用WebSocket的技術做到real-time網站。\n  這種專案最棒的地方是這很讓人印象深刻。 因為製作遊戲需要很多時間\u0026quot;打磨\u0026quot;(Polishing)， 這也代表你有足夠的耐心，知道怎麼處理問題。\n  這是另一個類似電商的專案，你可以在一週內製作一個簡單的遊戲。 如果這是一個你感興趣的項目，你可以擴展這個遊戲， 它可以變成是一個數週或是數個月的專案。\n結語  Kyle在影片中說： 現在你可能會想，這些專案是不是太簡單了，或是對於找工作不是那麼重要。 但我可以向你保證，我做了五個裡面的其中三個， 而我的雇主超級喜歡，並且讓我得到我的第一份工作。\n 所以，如果你還沒有這些項目，從這裡面選一個開始做吧！\n","date":"2021-08-30T00:00:00Z","image":"https://d1034181036.github.io/p/five-tiny-web-side-projects/article-img_hudd3a079a0a478bef41620c0a3b896c08_220133_120x120_fill_q75_box_smart1.jpg","permalink":"https://d1034181036.github.io/p/five-tiny-web-side-projects/","title":"5個可以在一週內完成的web作品"}]