<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>web on KevinChen</title>
    <link>https://d1034181036.github.io/tags/web/</link>
    <description>Recent content in web on KevinChen</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Fri, 06 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://d1034181036.github.io/tags/web/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Line生日提醒工具</title>
      <link>https://d1034181036.github.io/p/line-birthdy-notify/</link>
      <pubDate>Mon, 25 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://d1034181036.github.io/p/line-birthdy-notify/</guid>
      <description>前言 我有一個大學班級的Line群組， 每當有同學生日時，我們老師就會傳訊息祝他生日快樂， 而且持續到現在整整七年都還保持著這個習慣，真的是太有毅力了！ 我們有時候還會開玩笑懷疑老師有寫機器人來自動發生日快樂訊息XD

現在很多人的Facebook會把生日顯示關掉，因此更有可能錯過這些日子。 所以我們來做個免費、不需架設伺服器的生日提醒系統吧！
Line 生日提醒工具 使用工具  Google Apps Script Google Sheets Line Notify  運作方式  排程設定每天固定時間執行一次 Script 讀取 Google Sheets 取得生日資料 若近 7 天有人生日就呼叫 Line Notify 傳送提醒 (可自行調整天數)  設定步驟  Line Notify 設定通知群組、取得專用Token Google Sheets 建立Sheets檔案，設定格式請參考這裡 Google Apps Script 建立程式檔案，請參考下方程式碼範例，將sheetId與token填入 設定排程定時執行程式 完成！  程式碼 function main(){ //sheetId可以從網址複製 -&amp;gt;https://docs.google.com/spreadsheets/d/{sheet_id}/ const sheetId = &#39;&#39;; const token = &#39;&#39;; const notifyDays = 7; const spreadSheet = SpreadsheetApp.</description>
    </item>
    
    <item>
      <title>反向代理工具：Nginx Proxy Manager</title>
      <link>https://d1034181036.github.io/p/nginx-proxy-manager/</link>
      <pubDate>Fri, 06 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://d1034181036.github.io/p/nginx-proxy-manager/</guid>
      <description>官方網站：https://nginxproxymanager.com/
 為什麼要使用Nginx Proxy Manager？  多人管理系統、圖形化介面 漂亮的介面、一目了然所有的Proxy設定 內建Let&amp;rsquo;s Encrypt，免費又快速的幫你加上HTTPS  安裝方法：使用Docker-Compose Step1: 安裝 Docker Step2: 安裝 Docker-Compose [Optional] Step3: 建立 docker-compose.yml version: &#39;3&#39;services:app:image: &#39;jc21/nginx-proxy-manager:latest&#39;restart: unless-stoppedports:- &#39;80:80&#39;- &#39;81:81&#39;- &#39;443:443&#39;volumes:- ./data:/data- ./letsencrypt:/etc/letsencryptStep4: 啟動服務 docker-compose up -d Step5: 開始使用 - http://127.0.0.1:81 若是使用SSH安裝，可以依照不同情況遠端連到127.0.0.1:81。 以下幾種連接方式提供做為參考：
 SSH Tunnel 公開實體IP / NAT轉址 區網虛擬IP  預設管理員帳密
Email: admin@example.comPassword: changeme 新增Proxy示範</description>
    </item>
    
    <item>
      <title>有 1,247 個人點進來看我把筆放到貓的左手上</title>
      <link>https://d1034181036.github.io/p/this-video-has-1247-views/</link>
      <pubDate>Tue, 21 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://d1034181036.github.io/p/this-video-has-1247-views/</guid>
      <description>YouTube影片連結 thumbnail
想法來源：Tom Scott 非常有意思的影片，強烈推薦。 This Video Has X Views 自己動手做 我在這邊選擇使用 Google Apps Script 來實作，原因有以下三點：
 授權 YouTube API 的方式非常簡單。 方便連結 Google Sheet 紀錄執行結果。 可以排程定時執行，無須自己花錢架設伺服器。  版本1 - 基本功能版 功能非常的簡單，只需要三行程式碼：  呼叫api取得影片資訊 更改影片資訊的標題欄(改為現在的觀看次數) 呼叫api執行更新  function basic(){ // 影片ID設定 const videoId = &amp;quot;aST49yvU3x0&amp;quot;; // 標題格式設定 const titleFormat = &amp;quot;有 {views} 個人點進來看我把筆放到貓的左手上&amp;quot;; // 取得影片資訊 const videoDetails = YouTube.Videos.list(&amp;quot;snippet, statistics&amp;quot;, { id: videoId })[&#39;items&#39;][0]; // 更新標題資訊 videoDetails[&#39;snippet&#39;][&#39;title&#39;] = titleFormat.replace(&amp;quot;{views}&amp;quot;, videoDetails[&#39;statistics&#39;][&#39;viewCount&#39;].</description>
    </item>
    
  </channel>
</rss>
